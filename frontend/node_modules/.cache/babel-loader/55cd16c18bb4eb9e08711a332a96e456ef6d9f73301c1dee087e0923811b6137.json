{"ast":null,"code":"import _classPrivateFieldLooseBase from \"C:/Users/user/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"C:/Users/user/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nvar _onResponce = /*#__PURE__*/_classPrivateFieldLooseKey(\"onResponce\");\nclass Api {\n  constructor({\n    url,\n    headers\n  }) {\n    Object.defineProperty(this, _onResponce, {\n      value: _onResponce2\n    });\n    this._url = url;\n    this._headers = headers;\n    this._authorization = headers.authorization;\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  setUserInfo(fullName, aboutMe) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: fullName,\n        about: aboutMe\n      })\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  getCard() {\n    return fetch(`${this._url}/cards/`, {\n      headers: this._headers,\n      method: 'GET'\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  getCardById(idTask) {\n    return fetch(`${this._url}/cards/${idTask}`, {\n      headers: this._headers,\n      method: 'GET'\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  deleteCardID(cardID) {\n    return fetch(`${this._url}/cards/${cardID}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  addCard(data) {\n    return fetch(`${this._url}/cards/`, {\n      headers: this._headers,\n      method: 'POST',\n      body: JSON.stringify(data)\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  addLike(cardID) {\n    return fetch(`${this._url}/cards/${cardID}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  deleteLike(cardID) {\n    return fetch(`${this._url}/cards/${cardID}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  setInfoAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.editAvatar\n      })\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n}\nfunction _onResponce2(res) {\n  return res.ok ? res.json() : res.json().then(errData => Promise.reject(errData));\n}\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-77',\n  headers: {\n    authorization: '5ffe31aa-ca2a-431b-894e-0704b9f5eaf4',\n    'content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","url","headers","Object","defineProperty","_onResponce","value","_onResponce2","_url","_headers","_authorization","authorization","getUserInfo","fetch","then","_classPrivateFieldLooseBase","setUserInfo","fullName","aboutMe","method","body","JSON","stringify","name","about","getCard","getCardById","idTask","deleteCardID","cardID","addCard","data","addLike","deleteLike","setInfoAvatar","avatar","editAvatar","res","ok","json","errData","Promise","reject","api"],"sources":["C:/Users/user/dev/mesto-react/src/utils/api.js"],"sourcesContent":[" class Api {\r\n    constructor({ url, headers }) {\r\n      this._url = url;\r\n      this._headers = headers;\r\n      this._authorization = headers.authorization;\r\n    }\r\n  \r\n    #onResponce(res) {\r\n      return res.ok ? res.json() : res.json().then(errData => Promise.reject(errData))\r\n  }\r\n  \r\n  \r\n    getUserInfo() {\r\n      return fetch(`${this._url}/users/me`, {\r\n              headers: this._headers,\r\n          })\r\n          .then(this.#onResponce)\r\n    }\r\n  \r\n    setUserInfo(fullName, aboutMe) {\r\n      return fetch(`${this._url}/users/me`, {\r\n          method: 'PATCH',\r\n          headers: this._headers,\r\n          body: JSON.stringify({\r\n              name: fullName,\r\n              about: aboutMe\r\n          })\r\n      })\r\n      .then(this.#onResponce)\r\n  }\r\n  \r\n  \r\n    getCard() {\r\n      return fetch(`${this._url}/cards/`, {\r\n        headers: this._headers,\r\n        method: 'GET',\r\n      })\r\n      .then(this.#onResponce)\r\n    }\r\n  \r\n    getCardById(idTask) {\r\n      return fetch(`${this._url}/cards/${idTask}`, {\r\n        headers: this._headers,\r\n        method: 'GET',\r\n      })\r\n      .then(this.#onResponce)\r\n    }\r\n  \r\n    deleteCardID(cardID) {\r\n      return fetch(`${this._url}/cards/${cardID}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n              authorization: this._authorization,\r\n          }\r\n      })\r\n      .then(this.#onResponce)\r\n  }\r\n  \r\n  \r\n    addCard(data) {\r\n      return fetch(`${this._url}/cards/`, {\r\n        headers: this._headers,\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n      })\r\n      .then(this.#onResponce)\r\n    }\r\n      addLike(cardID) {\r\n      return fetch(`${this._url}/cards/${cardID}/likes`, {\r\n          method: 'PUT',\r\n          headers: {\r\n              authorization: this._authorization,\r\n          }\r\n      })\r\n      .then(this.#onResponce)\r\n  }\r\n  \r\n      deleteLike(cardID) {\r\n      return fetch(`${this._url}/cards/${cardID}/likes`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n              authorization: this._authorization,\r\n          }\r\n      })\r\n      .then(this.#onResponce)\r\n  }\r\n  \r\n      setInfoAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n            avatar: data.editAvatar,\r\n        })\r\n    })\r\n    .then(this.#onResponce)\r\n  }\r\n  \r\n    \r\n  }\r\n\r\n  const api = new Api({  \r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-77',  \r\n    headers: {  \r\n      authorization: '5ffe31aa-ca2a-431b-894e-0704b9f5eaf4',  \r\n      'content-Type': 'application/json'  \r\n    }  \r\n    \r\n  }) \r\n  export default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
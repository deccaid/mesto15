{"ast":null,"code":"class Auth {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    throw new Error('error');\n  }\n  registerUser(email, password) {\n    return fetch(`${this.baseUrl}/signup`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  authUser(email, password) {\n    return fetch(`${this.baseUrl}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(this._checkResponse);\n  }\n  checkToken(token) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': \"application/json\",\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n}\nconst auth = new Auth('https://auth.nomoreparties.co');\nexport default auth;","map":{"version":3,"names":["Auth","constructor","baseUrl","_checkResponse","res","ok","json","Error","registerUser","email","password","fetch","method","headers","body","JSON","stringify","then","authUser","checkToken","token","auth"],"sources":["C:/Users/user/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["class Auth {\r\n    constructor(baseUrl) {\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        if(res.ok) {\r\n            return res.json()\r\n        }\r\n        throw new Error('error')\r\n    }\r\n\r\n    registerUser(email,password) {\r\n        return fetch(`${this.baseUrl}/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password})\r\n        })\r\n        .then((res) => {\r\n          return this._checkResponse(res)\r\n        })\r\n    }\r\n    authUser(email, password) {\r\n        return fetch(`${this.baseUrl}/signin`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'  \r\n            },\r\n            body: JSON.stringify({email, password})\r\n        })\r\n        .then(this._checkResponse)\r\n    }\r\n\r\n    checkToken(token) {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n                'Authorization': `Bearer ${token}`,\r\n            }\r\n        })\r\n        .then((res) => {\r\n          return this._checkResponse(res)\r\n        })\r\n    }\r\n}\r\n\r\nconst auth = new Auth('https://auth.nomoreparties.co')\r\nexport default auth"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACPC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EAEAC,cAAcA,CAACC,GAAG,EAAE;IAChB,IAAGA,GAAG,CAACC,EAAE,EAAE;MACP,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACrB;IACA,MAAM,IAAIC,KAAK,CAAC,OAAO,CAAC;EAC5B;EAEAC,YAAYA,CAACC,KAAK,EAACC,QAAQ,EAAE;IACzB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACT,OAAQ,SAAQ,EAAE;MACnCU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBP,KAAK,EAAEA,KAAK;QACZC,QAAQ,EAAEA;MAAQ,CAAC;IAC3B,CAAC,CAAC,CACDO,IAAI,CAAEb,GAAG,IAAK;MACb,OAAO,IAAI,CAACD,cAAc,CAACC,GAAG,CAAC;IACjC,CAAC,CAAC;EACN;EACAc,QAAQA,CAACT,KAAK,EAAEC,QAAQ,EAAE;IACtB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACT,OAAQ,SAAQ,EAAE;MACnCU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACP,KAAK;QAAEC;MAAQ,CAAC;IAC1C,CAAC,CAAC,CACDO,IAAI,CAAC,IAAI,CAACd,cAAc,CAAC;EAC9B;EAEAgB,UAAUA,CAACC,KAAK,EAAE;IACd,OAAOT,KAAK,CAAE,GAAE,IAAI,CAACT,OAAQ,WAAU,EAAE;MACrCU,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASO,KAAM;MACrC;IACJ,CAAC,CAAC,CACDH,IAAI,CAAEb,GAAG,IAAK;MACb,OAAO,IAAI,CAACD,cAAc,CAACC,GAAG,CAAC;IACjC,CAAC,CAAC;EACN;AACJ;AAEA,MAAMiB,IAAI,GAAG,IAAIrB,IAAI,CAAC,+BAA+B,CAAC;AACtD,eAAeqB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}
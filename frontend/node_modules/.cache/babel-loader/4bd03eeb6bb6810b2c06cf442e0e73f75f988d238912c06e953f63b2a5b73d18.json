{"ast":null,"code":"//import {options} from '../utils/constants.js';\n\nconst options = {\n  token: '54e47a58-a3be-4854-bdb0-d150680efc4c',\n  cohortId: 'cohort-24',\n  myId: '34f519f4db31bcdefd2e9e7c',\n  url: 'https://mesto.nomoreparties.co'\n};\nclass Api {\n  constructor(options) {\n    this._token = options.token;\n    this._cohortId = options.cohortId;\n    this._url = options.url;\n    this._me = '/v1/' + this._cohortId + '/users/me';\n    this._ava = this._me + '/avatar';\n    this._cards = '/v1/' + this._cohortId + '/cards';\n    this._likes = this._url + this._cards + '/likes/';\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  getUserInfo() {\n    return fetch(this._url + this._me, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._getResponseData(res));\n  }\n  getCardsFromServer() {\n    return fetch(this._url + this._cards, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._getResponseData(res));\n  }\n  changeAvatar(link) {\n    return fetch(this._url + this._ava, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link.link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n  loadProfile(obj) {\n    return fetch(this._url + this._me, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: obj.name,\n        about: obj.about\n      })\n    }).then(res => this._getResponseData(res));\n  }\n  loadNewCard(obj) {\n    return fetch(this._url + this._cards, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: obj.name,\n        link: obj.link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n  delCard(id) {\n    return fetch(this._url + this._cards + '/' + id, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._getResponseData(res));\n  }\n  changeLikeCardStatus(id, method) {\n    return fetch(this._likes + id, {\n      method: method,\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._getResponseData(res));\n  }\n  /*\r\n  sendLike(id, method) {\r\n    return fetch(this._likes+id, {\r\n      method: method, // 'PUT'\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then(\r\n      (res) => this._getResponseData(res)\r\n    )\r\n  }\r\n  */\n  /*\r\n  sendDislike(id) {\r\n    return fetch(this._likes+id, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then(\r\n      (res) => this._getResponseData(res)\r\n    )\r\n  }\r\n  */\n}\n\nconst api = new Api(options);\nexport default api;","map":{"version":3,"names":["options","token","cohortId","myId","url","Api","constructor","_token","_cohortId","_url","_me","_ava","_cards","_likes","_getResponseData","res","ok","Promise","reject","status","json","getUserInfo","fetch","headers","authorization","then","getCardsFromServer","changeAvatar","link","method","body","JSON","stringify","avatar","loadProfile","obj","name","about","loadNewCard","delCard","id","changeLikeCardStatus","api"],"sources":["C:/Users/user/dev/mesto-react/src/utils/api.js"],"sourcesContent":["//import {options} from '../utils/constants.js';\r\n\r\nconst options = {\r\n  token: '54e47a58-a3be-4854-bdb0-d150680efc4c',\r\n  cohortId: 'cohort-24',\r\n  myId: '34f519f4db31bcdefd2e9e7c',\r\n  url: 'https://mesto.nomoreparties.co'\r\n}\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this._token = options.token\r\n    this._cohortId = options.cohortId\r\n\r\n    this._url = options.url\r\n    this._me = '/v1/' + this._cohortId + '/users/me'\r\n    this._ava = this._me + '/avatar'\r\n    this._cards = '/v1/' + this._cohortId + '/cards'\r\n    this._likes = this._url + this._cards + '/likes/'\r\n  }\r\n\r\n  _getResponseData(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`)\r\n    }\r\n    return res.json()\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(this._url + this._me, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then((res) => this._getResponseData(res))\r\n  }\r\n\r\n  getCardsFromServer() {\r\n    return fetch(this._url + this._cards, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then((res) => this._getResponseData(res))\r\n  }\r\n\r\n  changeAvatar(link) {\r\n    return fetch(this._url + this._ava, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: link.link\r\n      })\r\n    }).then((res) => this._getResponseData(res))\r\n  }\r\n\r\n  loadProfile(obj) {\r\n    return fetch(this._url + this._me, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: obj.name,\r\n        about: obj.about\r\n      })\r\n    }).then((res) => this._getResponseData(res))\r\n  }\r\n\r\n  loadNewCard(obj) {\r\n    return fetch(this._url + this._cards, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: obj.name,\r\n        link: obj.link\r\n      })\r\n    }).then((res) => this._getResponseData(res))\r\n  }\r\n\r\n  delCard(id) {\r\n    return fetch(this._url + this._cards + '/' + id, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then((res) => this._getResponseData(res))\r\n  }\r\n\r\n  changeLikeCardStatus(id, method) {\r\n    return fetch(this._likes + id, {\r\n      method: method,\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then((res) => this._getResponseData(res))\r\n  }\r\n  /*\r\n  sendLike(id, method) {\r\n    return fetch(this._likes+id, {\r\n      method: method, // 'PUT'\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then(\r\n      (res) => this._getResponseData(res)\r\n    )\r\n  }\r\n  */\r\n  /*\r\n  sendDislike(id) {\r\n    return fetch(this._likes+id, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then(\r\n      (res) => this._getResponseData(res)\r\n    )\r\n  }\r\n  */\r\n}\r\n\r\nconst api = new Api(options)\r\nexport default api"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
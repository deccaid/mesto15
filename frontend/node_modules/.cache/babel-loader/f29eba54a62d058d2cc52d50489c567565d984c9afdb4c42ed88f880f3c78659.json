{"ast":null,"code":"import _classPrivateFieldLooseBase from \"C:/Users/user/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"C:/Users/user/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nvar _onResponce = /*#__PURE__*/_classPrivateFieldLooseKey(\"onResponce\");\nclass Api {\n  constructor({\n    url,\n    headers\n  }) {\n    Object.defineProperty(this, _onResponce, {\n      value: _onResponce2\n    });\n    this._url = url;\n    this._headers = headers;\n    this._authorization = headers.authorization;\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: obj.name,\n        about: obj.about\n      })\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  getCards() {\n    return fetch(`${this._url}/cards/`, {\n      headers: this._headers,\n      method: \"GET\"\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  getCardById(idCard) {\n    return fetch(`${this._url}/cards/${idCard}`, {\n      headers: this._headers,\n      method: \"GET\"\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  deleteCardID(cardID) {\n    return fetch(`${this._url}/cards/${cardID}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  addCard(data) {\n    return fetch(`${this._url}/cards/`, {\n      headers: this._headers,\n      method: \"POST\",\n      body: JSON.stringify(data)\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  changeLikeCardStatus(id, hasLike) {\n    if (!hasLike) {\n      return api.addLike(id);\n    }\n    return api.deleteLike(id);\n  }\n  addLike(cardID) {\n    return fetch(`${this._url}/cards/${cardID}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  deleteLike(cardID) {\n    return fetch(`${this._url}/cards/${cardID}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n  setInfoAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.editAvatar\n      })\n    }).then(_classPrivateFieldLooseBase(this, _onResponce)[_onResponce]);\n  }\n}\nfunction _onResponce2(res) {\n  return res.ok ? res.json() : res.json().then(errData => Promise.reject(errData));\n}\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-77\",\n  headers: {\n    authorization: \"5ffe31aa-ca2a-431b-894e-0704b9f5eaf4\",\n    \"content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","url","headers","Object","defineProperty","_onResponce","value","_onResponce2","_url","_headers","_authorization","authorization","getUserInfo","fetch","then","_classPrivateFieldLooseBase","setUserInfo","data","method","body","JSON","stringify","name","obj","about","getCards","getCardById","idCard","deleteCardID","cardID","addCard","changeLikeCardStatus","id","hasLike","api","addLike","deleteLike","setInfoAvatar","avatar","editAvatar","res","ok","json","errData","Promise","reject"],"sources":["C:/Users/user/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor({ url, headers }) {\r\n    this._url = url;\r\n    this._headers = headers;\r\n    this._authorization = headers.authorization;\r\n  }\r\n\r\n  #onResponce(res) {\r\n    return res.ok\r\n      ? res.json()\r\n      : res.json().then((errData) => Promise.reject(errData));\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: this._headers,\r\n    }).then(this.#onResponce);\r\n  }\r\n\r\n  setUserInfo(data) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: obj.name,\r\n        about: obj.about\r\n      }),\r\n    }).then(this.#onResponce);\r\n  }\r\n\r\n  getCards() {\r\n    return fetch(`${this._url}/cards/`, {\r\n      headers: this._headers,\r\n      method: \"GET\",\r\n    }).then(this.#onResponce);\r\n  }\r\n\r\n  getCardById(idCard) {\r\n    return fetch(`${this._url}/cards/${idCard}`, {\r\n      headers: this._headers,\r\n      method: \"GET\",\r\n    }).then(this.#onResponce);\r\n  }\r\n\r\n\r\n  deleteCardID(cardID) {\r\n    return fetch(`${this._url}/cards/${cardID}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n      },\r\n    }).then(this.#onResponce);\r\n  }\r\n\r\n  addCard(data) {\r\n    return fetch(`${this._url}/cards/`, {\r\n      headers: this._headers,\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n    }).then(this.#onResponce);\r\n  }\r\n\r\n  changeLikeCardStatus(id, hasLike) {\r\n    if (!hasLike) {\r\n      return api.addLike(id);\r\n    }\r\n    return api.deleteLike(id);\r\n  }\r\n\r\n  addLike(cardID) {\r\n    return fetch(`${this._url}/cards/${cardID}/likes`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n      },\r\n    }).then(this.#onResponce);\r\n  }\r\n\r\n  deleteLike(cardID) {\r\n    return fetch(`${this._url}/cards/${cardID}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n      },\r\n    }).then(this.#onResponce);\r\n  }\r\n\r\n  setInfoAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.editAvatar,\r\n      }),\r\n    }).then(this.#onResponce);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  url: \"https://mesto.nomoreparties.co/v1/cohort-77\",\r\n  headers: {\r\n    authorization: \"5ffe31aa-ca2a-431b-894e-0704b9f5eaf4\",\r\n    \"content-Type\": \"application/json\",\r\n  },\r\n});\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}